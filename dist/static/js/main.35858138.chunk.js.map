{"version":3,"sources":["Components/NavBar.js","Actions/AuthActions.js","Actions/ContactActions.js","Components/ContactDetails.js","Components/ContactList.js","Components/MainPage.js","Components/EditContact.js","Components/SignIn.js","Components/CreateContact.js","App.js","serviceWorker.js","Reducers/AuthReducer.js","Reducers/ContactReducer.js","Reducers/RootReducer.js","config/firebaseConfig.js","index.js"],"names":["connect","state","auth","firebase","dispatch","signOut","getState","getFirebase","then","type","props","console","log","className","to","uid","onClick","createContact","contact","getFirestore","collection","add","Time","Date","catch","err","error","deleteContact","id","doc","delete","ownProps","search","FirstName","toLowerCase","indexOf","LastName","Phone","Email","Status","e","preventDefault","ContactList","contacts","map","key","MainPage","onchange","setState","target","value","this","onChange","placeholder","Component","compose","firestore","ordered","firestoreConnect","orderBy","match","params","data","useState","details","setDetails","useEffect","handleChange","handleRadio","onSubmit","history","push","name","SignIn","email","password","handleSubmit","signIn","authError","htmlFor","creds","credentials","signInWithEmailAndPassword","CreateContact","App","exact","path","component","EditContact","Boolean","window","location","hostname","initState","AuthReducer","action","ContactReducer","project","RootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","rrfProps","config","confgi","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"2QAiCeA,eAVS,SAACC,GACrB,MAAO,CACHC,KAAOD,EAAME,SAASD,SAGJ,SAACE,GACvB,MAAM,CACEC,QAAU,kBAAMD,GCZjB,SAACA,EAAUE,EAAX,IACcC,EADyB,EAAjBA,eAEhBL,OAAOG,UAAUG,MAAK,WAC3BJ,EAAS,CAACK,KAAK,+BDYZT,EA7BA,SAACU,GAAW,IAChBR,EAAQQ,EAARR,KAEP,OADAS,QAAQC,IAAIV,GAER,yBAAKW,UAAU,eACf,yBAAKA,UAAU,aACX,kBAAC,IAAD,CAAMC,GAAK,IAAID,UAAU,aAAzB,gBACCX,EAAKa,IACN,wBAAIF,UAAU,SACd,4BAAI,kBAAC,IAAD,CAASC,GAAI,UAAUD,UAAU,SAAjC,mBACJ,4BAAK,uBAAGA,UAAU,QAAQG,QAASN,EAAML,SAApC,cAEL,U,QEhBCY,EAAgB,SAACC,GAC1B,OAAO,SAACd,EAAUE,EAAX,GAAqD,EAA/BC,aACJY,EADmC,EAAlBA,gBAExBC,WAAW,YAAYC,IAAjC,2BACOH,GADP,IAEII,KAAO,IAAIC,QAEdf,MAAK,WACFJ,EAAS,CAACK,KAAK,iBAAkBS,QAAQA,OAC1CM,OAAM,SAACC,GACNrB,EAAS,CAACK,KAAK,uBAAwBiB,MAAMD,SAKhDE,EAAgB,SAACC,GAC1B,OAAO,SAACxB,EAAUE,EAAX,GAAuD,EAAhCC,aACVY,EAD0C,EAAnBA,gBAG/BC,WAAW,YAAYS,IAAID,GAClCE,SACAtB,MAAK,WACJJ,EAAS,CAAEK,KAAM,iBAAkBmB,GAAGA,OACrCJ,OAAM,SAAAC,GACPrB,EAAS,CAAEK,KAAM,uBAAwBiB,MAAMD,SCyB1CzB,eAXQ,SAACC,EAAO8B,GAC/B,MAAM,CACFH,GAAIG,EAASb,QAAQU,OAIE,SAACxB,GACxB,MAAO,CACHuB,cAAe,SAACC,GAAD,OAAQxB,EAASuB,EAAcC,QAGvC5B,EA5CQ,SAAC,GAAsC,IAArCkB,EAAoC,EAApCA,QAASS,EAA2B,EAA3BA,cAAeK,EAAY,EAAZA,OAQjD,MAAY,KAATA,IAAgF,IAAjEd,EAAQe,UAAUC,cAAcC,QAAQH,EAAOE,iBAAuF,IAAhEhB,EAAQkB,SAASF,cAAcC,QAAQH,EAAOE,iBAAwD,IAAjChB,EAAQmB,MAAMF,QAAQH,KAA6E,IAA7Dd,EAAQoB,MAAMJ,cAAcC,QAAQH,EAAOE,eACnO,KAGH,yBAAKrB,UAAU,oDACP,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,gBACf,0BAAMA,UAAU,2BAA2BK,EAAQe,UAAnD,IAA+Df,EAAQkB,WAEvE,yBAAKvB,UAAU,WACX,sCAAYK,EAAQmB,OACpB,sCAAYnB,EAAQoB,OACpB,uCAAapB,EAAQqB,UAGzB,yBAAK1B,UAAU,eACf,uBAAGA,UAAU,uBAAuBG,QAtB3B,SAACwB,GACdA,EAAEC,iBACF,IAAMb,EAAIV,EAAQU,GAClBD,EAAcC,KAmBV,UACJ,kBAAC,IAAD,CAAMd,GAAK,gBAAkBI,EAAQU,IACrC,uBAAGf,UAAU,wBAAb,cChBG6B,EAXK,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,SAAUX,EAAY,EAAZA,OAC5B,OACI,yBAAKnB,UAAU,wBACV8B,GAAYA,EAASC,KAAI,SAAA1B,GACtB,OACI,kBAAC,EAAD,CAAgBA,QAASA,EAAU2B,IAAK3B,EAAQU,GAAII,OAAQA,S,gBCH1Ec,E,4MACF7C,MAAM,CACJ+B,OAAO,I,EAETe,SAAW,SAACP,GACR,EAAKQ,SAAS,CAAChB,OAAQQ,EAAES,OAAOC,S,uDAG1B,IAAD,EACoBC,KAAKzC,MAAvBiC,EADF,EACEA,SAAUzC,EADZ,EACYA,KACX8B,EAAUmB,KAAKlD,MAAf+B,OACN,OAAI9B,EAAKa,IAEL,yBAAKF,UAAU,uBAEf,2BAAQA,UAAU,aAAaJ,KAAK,OAAO2C,SAAUD,KAAKJ,SAAUM,YAAY,mBAC5E,yBAAKxC,UAAU,gBACX,kBAAC,EAAD,CAAa8B,SAAUA,EAAUX,OAAQA,MANhC,kBAAC,IAAD,CAAUlB,GAAI,gB,GAXpBwC,aA+BRC,cACXvD,aARoB,SAACC,GACvB,MAAM,CACF0C,SAAS1C,EAAMuD,UAAUC,QAAQd,SACjCzC,KAAKD,EAAME,SAASD,SAMtBwD,2BAAiB,CACb,CAACtC,WAAW,WAAYuC,QAAQ,CAAC,YAAY,UAHtCJ,CAIPT,G,iBCoEOS,cACXvD,aAlBoB,SAACC,EAAO8B,GAExB,IAAMH,EAAKG,EAAS6B,MAAMC,OAAOjC,GAC3Be,EAAW1C,EAAMuD,UAAUM,KAAKnB,SAEtC,MAAM,CACFzB,QAFYyB,EAAUA,EAASf,GAAM,KAGrC1B,KAAMD,EAAME,SAASD,SAIN,SAACE,GACxB,MAAO,CACHuB,cAAe,SAACC,GAAD,OAAQxB,EAASuB,EAAcC,KAC9CX,cAAgB,SAACC,GAAD,OAAad,EAASa,EAAcC,SAKxDwC,2BAAiB,CACb,CAAEtC,WAAa,cAHRmC,EAvGK,SAAC7C,GAAW,IACrBQ,EAAWR,EAAXQ,QACAhB,EAAOQ,EAAPR,KAFoB,EAGG6D,mBAAS,CACnC9B,UAAY,GACZG,SAAW,GACXC,MAAQ,GACRC,MAAO,GACPC,OAAQ,KARe,mBAGpByB,EAHoB,KAGXC,EAHW,KAiB3B,GAPAC,qBAAU,WACNvD,QAAQC,IAAI,UAAWM,GACvB+C,EAAW,eACJ/C,MAER,CAACA,IACJP,QAAQC,IAAIoD,IACR9D,EAAKa,IAAK,OAAO,kBAAC,IAAD,CAAUD,GAAI,YAC/B,GAAGI,EAAS,CACZ,IAAMU,EAAIlB,EAAMkD,MAAMC,OAAOjC,GACtBuC,EAAe,SAAC3B,GACnBA,EAAEC,iBACFwB,EAAW,2BACJD,GADG,kBAELxB,EAAES,OAAOrB,GAAMY,EAAES,OAAOC,UAW3BkB,EAAc,SAAC5B,GACjBA,EAAEC,iBACFwB,EAAW,2BACJD,GADG,IAENzB,OAASC,EAAES,OAAOrB,OAI1B,OACI,yBAAKf,UAAU,aACX,0BAAMwD,SAjBO,SAAC7B,GAClBA,EAAEC,iBACF/B,EAAMiB,cAAcC,GACpBlB,EAAMO,cAAc+C,GACpBtD,EAAM4D,QAAQC,KAAK,MAae1D,UAAU,SACpC,wBAAIA,UAAU,SAAd,gBACA,6BACI,2BAAOqC,MAAOc,EAAQ/B,UAAWmB,SAAUe,EAAc1D,KAAK,OAAOmB,GAAG,YAAYf,UAAU,gBAElG,yBAAKA,UAAU,eACX,2BAAOuC,SAAUe,EAAc1D,KAAK,OAAOmB,GAAG,WAAWsB,MAAOc,EAAQ5B,SAAUvB,UAAU,gBAEhG,yBAAKA,UAAU,eAEX,2BAAOuC,SAAUe,EAAc1D,KAAK,OAAOmB,GAAG,QAAQsB,MAAOc,EAAQ3B,MAAOxB,UAAU,gBAE1F,yBAAKA,UAAU,eAEX,2BAAOuC,SAAUe,EAAc1D,KAAK,QAAQmB,GAAG,QAAQsB,MAAOc,EAAQ1B,MAAOzB,UAAU,gBAEvF,+BACI,2BAAOA,UAAU,WAAW2D,KAAK,SAAS/D,KAAK,QAAQ2C,SAAUgB,EAAaxC,GAAG,WACjF,yCAEJ,+BACI,2BAAOf,UAAU,WAAW2D,KAAK,SAAS/D,KAAK,QAAQ2C,SAAUgB,EAAaxC,GAAG,aACjF,2CAER,yBAAKf,UAAU,eACX,4BAAQA,UAAU,6BAAlB,mBAShB,OACI,iDCjFN4D,E,4MACFxE,MAAQ,CACAyE,MAAM,GACNC,SAAS,I,EAEjBR,aAAe,SAAC3B,GACZ,EAAKQ,SAAL,eACKR,EAAES,OAAOrB,GAAMY,EAAES,OAAOC,S,EAKjC0B,aAAe,SAACpC,GACZA,EAAEC,iBACF,EAAK/B,MAAMmE,OAAO,EAAK5E,Q,uDAEjB,IAAD,EAEqBkD,KAAKzC,MAAxBoE,EAFF,EAEEA,UACP,OAHK,EAEa5E,KACVa,IAAY,kBAAC,IAAD,CAAUD,GAAI,MAE9B,yBAAKD,UAAU,aACX,0BAAMwD,SAAUlB,KAAKyB,aAAc/D,UAAU,SACzC,wBAAIA,UAAU,SAAd,WACA,yBAAKA,UAAU,eACX,2BAAOkE,QAAQ,SAAf,SACA,2BAAO3B,SAAUD,KAAKgB,aAActD,UAAU,aAAaJ,KAAK,QAAQmB,GAAG,WAE/E,yBAAKf,UAAU,eACX,2BAAOkE,QAAQ,YAAf,YACA,2BAAO3B,SAAUD,KAAKgB,aAActD,UAAU,aAAaJ,KAAK,WAAWmB,GAAG,cAElF,yBAAKf,UAAU,eACX,4BAAQA,UAAU,oBAAlB,YAEJ,yBAAKA,UAAU,mBACViE,EAAW,2BAAIA,GAAiB,Y,GApCpCxB,aAyDNtD,eAZS,SAACC,GACrB,MAAM,CACF6E,UAAY7E,EAAMC,KAAK4E,UACvB5E,KAAKD,EAAME,SAASD,SAGD,SAACE,GACxB,MAAM,CACEyE,OAAS,SAACG,GAAD,OAAW5E,GN1DT6E,EM0DyBD,ENzDrC,SAAC5E,EAASE,EAAV,IAEaC,EAFyB,EAAjBA,eAGfL,OAAOgF,2BACZD,EAAYP,MACZO,EAAYN,UACdnE,MAAK,WACHJ,EAAS,CAACK,KAAM,qBAEnBe,OAAM,SAACC,GACJrB,EAAS,CAACK,KAAK,cAAgBgB,cAXrB,IAACwD,MM8DRjF,CAA6CyE,GC1DtDU,E,4MACFlF,MAAQ,CACAgC,UAAY,GACZG,SAAW,GACXC,MAAQ,GACRC,MAAO,GACPC,OAAQ,I,EAEhB4B,aAAe,SAAC3B,GACZ,EAAKQ,SAAL,eACKR,EAAES,OAAOrB,GAAMY,EAAES,OAAOC,S,EAIjC0B,aAAe,SAACpC,GACZA,EAAEC,iBACF,EAAK/B,MAAMO,cAAc,EAAKhB,OAC9B,EAAKS,MAAM4D,QAAQC,KAAK,M,EAE5BH,YAAc,SAAC5B,GACPA,EAAEC,iBACF,EAAKO,SAAS,CACVT,OAASC,EAAES,OAAOrB,M,uDAM1B,OADcuB,KAAKzC,MAAZR,KACEa,IAEL,yBAAKF,UAAU,aACX,0BAAMwD,SAAUlB,KAAKyB,aAAc/D,UAAU,SACzC,wBAAIA,UAAU,SAAd,eACA,yBAAKA,UAAU,eACX,2BAAOkE,QAAQ,aAAf,cACA,2BAAO3B,SAAUD,KAAKgB,aAAc1D,KAAK,OAAOmB,GAAG,YAAYf,UAAU,gBAE7E,yBAAKA,UAAU,eACX,2BAAOkE,QAAQ,YAAf,aACA,2BAAO3B,SAAUD,KAAKgB,aAAc1D,KAAK,OAAOmB,GAAG,WAAWf,UAAU,gBAE5E,yBAAKA,UAAU,eACX,2BAAOkE,QAAQ,SAAf,SACA,2BAAO3B,SAAUD,KAAKgB,aAAc1D,KAAK,OAAOmB,GAAG,QAAQf,UAAU,gBAEzE,yBAAKA,UAAU,eACX,2BAAOkE,QAAQ,SAAf,SACA,2BAAO3B,SAAUD,KAAKgB,aAAc1D,KAAK,QAAQmB,GAAG,QAAQf,UAAU,gBAEtE,+BACI,2BAAOA,UAAU,WAAW2D,KAAK,SAAS/D,KAAK,QAAQ2C,SAAUD,KAAKiB,YAAaxC,GAAG,WACtF,yCAEJ,+BACI,2BAAOf,UAAU,WAAW2D,KAAK,SAAS/D,KAAK,QAAQ2C,SAAUD,KAAKiB,YAAaxC,GAAG,aACtF,2CAER,yBAAKf,UAAU,eACX,4BAAQA,UAAU,mBAAlB,kBA9BK,kBAAC,IAAD,CAAUC,GAAI,gB,GA5BfwC,aA+EbtD,eAZS,SAACC,GACrB,MAAM,CACFC,KAAKD,EAAME,SAASD,SAGD,SAACE,GAExB,MAAM,CACFa,cAAgB,SAACC,GAAD,OAAad,EAASa,EAAcC,QAI7ClB,CAA6CmF,GC3D7CC,E,uKAfT,OACE,kBAAC,IAAD,KACA,yBAAKvE,UAAU,OACb,kBAAC,EAAD,MACF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwE,OAAK,EAACC,KAAK,IAAIC,UAAYzC,IAClC,kBAAC,IAAD,CAAOwC,KAAK,mBAAmBC,UAAWC,IAC1C,kBAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWd,IACjC,kBAAC,IAAD,CAAOa,KAAK,UAAUC,UAAWJ,W,GAVzB7B,aCKEmC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAShC,MACvB,2DClBN,IAAMiC,EAAW,CACbf,UAAU,MA6BCgB,EAzBK,WAA8B,IAA7B7F,EAA4B,uDAArB4F,EAAUE,EAAW,uCAC7C,OAAOA,EAAOtF,MACV,IAAK,cAED,OADAE,QAAQC,IAAI,eACL,2BACAX,GADP,IAEI6E,UAAY,iBAGpB,IAAK,gBAED,OADAnE,QAAQC,IAAI,iBACL,2BACAX,GADP,IAEI6E,UAAU,OAGd,IAAK,mBAED,OADAnE,QAAQC,IAAI,cACLX,EACf,QACA,OAAOA,ICzBT4F,EAAW,CACblD,SAAU,CACN,CAACf,GAAG,EAAGK,UAAU,QAASG,SAAS,WAAYC,MAAM,aAAcC,MAAM,4BAA6BC,OAAO,UAC7G,CAACX,GAAG,EAAGK,UAAU,QAASG,SAAS,WAAYC,MAAM,aAAcC,MAAM,4BAA6BC,OAAO,YA2BtGyD,EAtBQ,WAA8B,IAA7B/F,EAA4B,uDAArB4F,EAAUE,EAAW,uCAEhD,OAAOA,EAAOtF,MACV,IAAK,iBAED,OADAE,QAAQC,IAAI,kBAAmBmF,EAAO7E,SAC/BjB,EACX,IAAK,uBACDU,QAAQC,IAAI,uBAAwBmF,EAAOrE,OAE3C,IAAK,iBAED,OADAf,QAAQC,IAAI,kBACLX,EACX,IAAK,uBAED,OADAU,QAAQC,IAAI,uBAAwB,UAAWX,EAAO,WAAY8F,EAAOE,SAClEhG,EAEf,QACI,OAAOA,I,QCZJiG,EAPKC,YAAgB,CAChCjG,KAAK4F,EACL5E,QAAQ8E,EACRxC,UAAU4C,mBACVjG,SAASkG,oB,wCCMXlG,IAASmG,cAXU,CACjBC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iBAMnB3G,IAASqD,YAAYuD,SAAS,CAACC,uBAAsB,IAEtC7G,QAAf,ECAM8G,EAAQC,YACZhB,EACA3C,YACE4D,YAAgBC,IAAMC,kBAAkB,CAAElG,4BAAcZ,6BACxD+G,yBAAeC,KAUbC,EAAW,CACfrH,aACAsH,OAAQF,EACRnH,SAAU6G,EAAM7G,SAChBsH,OAV2B,CAC3BC,YAAY,QACZC,wBAAwB,EACxBC,wBAAwB,EACxBC,kBAAkB,GAOlBC,mDAEF,SAASC,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAChB/H,EAAOgI,aAAY,SAAAjI,GAAK,OAAIA,EAAME,SAASD,QACjD,OAAKiI,mBAASjI,GACN+H,EADoB,yBAAKpH,UAAU,WAI7CuH,IAASC,OACP,kBAAC,IAAD,CAAUpB,MAAOA,GACjB,kBAAC,6BAA+BO,EAC9B,kBAACQ,EAAD,KACI,kBAAC,EAAD,SAINM,SAASC,eAAe,SL2EpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlI,MAAK,SAAAmI,GACJA,EAAaC,gBAEdpH,OAAM,SAAAE,GACLf,QAAQe,MAAMA,EAAMmH,c","file":"static/js/main.35858138.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link, NavLink} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signOut } from '../Actions/AuthActions'\r\nconst NavBar = (props) => {\r\n    const {auth} = props\r\n    console.log(auth)\r\n    return (\r\n        <nav className=\"nav-wrapper\">\r\n        <div className=\"container\">\r\n            <Link to = '/' className='logo left'>.ContactList</Link>\r\n            {auth.uid ? \r\n            <ul className='right'>\r\n            <li><NavLink to ='/create' className='links'>Create Contact</NavLink></li>\r\n            <li ><a className='links' onClick={props.signOut}>Sign Out</a></li>\r\n            </ul> :\r\n            null \r\n            }\r\n        </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth : state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps =(dispatch) => {\r\n    return{\r\n            signOut : () => dispatch(signOut())\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar)","export const signIn = (credentials) => {\r\n    return (dispatch,getState, {getFirebase}) => {\r\n\r\n        const firebase =getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({type: 'LOGIN_SUCCESS'})\r\n        })\r\n        .catch((err) => {\r\n            dispatch({type:'LOGIN_ERROR' , err})\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({type:'SIGN_OUT_SUCCESS'})\r\n        })\r\n    }\r\n}","export const createContact = (contact) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n            const firestore= getFirestore()\r\n            firestore.collection('contacts').add({\r\n                ...contact,\r\n                Time : new Date()\r\n            })\r\n            .then(() =>{\r\n                dispatch({type:'CREATE_CONTACT', contact:contact})\r\n            }).catch((err) => {\r\n                dispatch({type:'CREATE_CONTACT_ERROR', error:err})\r\n            })\r\n    }\r\n}\r\n\r\nexport const deleteContact = (id) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n      const firestore = getFirestore();\r\n      \r\n      firestore.collection('contacts').doc(id)\r\n        .delete()\r\n        .then(() => {\r\n          dispatch({ type: 'DELETE_CONTACT', id:id })\r\n        }).catch(err => {\r\n          dispatch({ type: 'DELETE_CONTACT_ERROR', error:err })\r\n      })\r\n    }\r\n  };\r\n  ","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {deleteContact} from '../Actions/ContactActions'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ContactDetails = ({contact, deleteContact, search}) => {\r\n\r\n    const handleDelete = (e) =>{\r\n            e.preventDefault();\r\n            const id= contact.id \r\n            deleteContact(id)\r\n            \r\n    }\r\nif(search!=='' && contact.FirstName.toLowerCase().indexOf(search.toLowerCase())===-1 && contact.LastName.toLowerCase().indexOf(search.toLowerCase())===-1 && contact.Phone.indexOf(search)===-1 && contact.Email.toLowerCase().indexOf(search.toLowerCase())===-1){\r\n    return null;\r\n}\r\nreturn(\r\n        <div className=\"card horizontal z-depth-2 contact-summary center\">\r\n                <div className=\"card-content grey-text\">\r\n                <div className=\"title center\">\r\n                <span className=\"card-title contact-name\">{contact.FirstName} {contact.LastName}</span>\r\n                </div>\r\n                <div className=\"details\">\r\n                    <p>Phone : {contact.Phone}</p>\r\n                    <p>Email : {contact.Email}</p>\r\n                    <p>Status : {contact.Status}</p>\r\n                </div>\r\n                </div>\r\n                <div className=\"card-action\">\r\n                <i className=\"material-icons small\" onClick ={handleDelete}>delete</i>\r\n            <Link to ={'/editContact/' + contact.id}>\r\n            <i className=\"material-icons small\" >edit</i>\r\n            </Link>\r\n            </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps =(state, ownProps) => {\r\nreturn{\r\n    id: ownProps.contact.id\r\n}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteContact: (id) => dispatch(deleteContact(id))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactDetails)","import React from 'react'\r\nimport ContactDetails from './ContactDetails'\r\n\r\n\r\nconst ContactList = ({contacts, search}) => {\r\n    return(\r\n        <div className=\"contact-list section\">\r\n            {contacts && contacts.map(contact => {\r\n                return(\r\n                    <ContactDetails contact={contact}  key={contact.id} search={search}/>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default ContactList","import React, { Component } from 'react'\r\nimport ContactList from './ContactList'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from  'react-router-dom'\r\nclass MainPage extends Component{\r\n    state={\r\n      search:''\r\n    }\r\n    onchange = (e) => {\r\n        this.setState({search: e.target.value})\r\n    }\r\n    \r\n    render() {\r\n        const {contacts, auth} = this.props\r\n        const{search} = this.state\r\n        if(!auth.uid) return <Redirect to= '/signIn'/>\r\n        return(\r\n            <div className=\"mainpage container \">\r\n        \r\n            <input  className='search-box' type=\"text\" onChange={this.onchange} placeholder='Search Contact'/>\r\n                <div className=\"contact-list\">\r\n                    <ContactList contacts={contacts} search={search}/>\r\n                </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n      contacts:state.firestore.ordered.contacts,\r\n      auth:state.firebase.auth\r\n  }\r\n\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection:'contacts', orderBy:['FirstName','asc']}\r\n    ]))(MainPage)","import React , {useState, useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {createContact, deleteContact} from '../Actions/ContactActions'\r\nimport {Redirect} from 'react-router-dom'\r\nconst EditContact = (props) => {\r\n    const {contact} = props \r\n    const {auth} =props\r\n    const [details, setDetails] = useState({\r\n        FirstName : '',\r\n        LastName : '',\r\n        Phone : '',\r\n        Email :'',\r\n        Status :''\r\n    })\r\n    useEffect(() => {\r\n        console.log('updated', contact)\r\n        setDetails({\r\n            ...contact\r\n        })\r\n    }, [contact])\r\n    console.log(details)\r\n    if(!auth.uid) return <Redirect to= '/signIn'/>\r\n        if(contact) {\r\n        const id= props.match.params.id\r\n         const handleChange = (e) => {\r\n            e.preventDefault()\r\n            setDetails({\r\n                ...details,\r\n                [e.target.id] : e.target.value, \r\n            }\r\n            )\r\n        }\r\n        const handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            props.deleteContact(id)\r\n            props.createContact(details)\r\n            props.history.push('/')\r\n\r\n        }\r\n        const handleRadio = (e) => {\r\n            e.preventDefault();\r\n            setDetails({\r\n                ...details,\r\n                Status : e.target.id \r\n            }\r\n            )\r\n    }\r\n        return(\r\n            <div className='container'>\r\n                <form onSubmit={handleSubmit} className=\"forms\">\r\n                    <h5 className='title'>Edit Contact</h5>\r\n                    <div>\r\n                        <input value={details.FirstName} onChange={handleChange} type=\"text\" id='FirstName' className='white-text'  />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <input onChange={handleChange} type=\"text\" id='LastName' value={details.LastName} className='white-text'/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        \r\n                        <input onChange={handleChange} type=\"text\" id='Phone' value={details.Phone} className='white-text'/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        \r\n                        <input onChange={handleChange} type=\"email\" id='Email' value={details.Email} className='white-text'/>\r\n                    </div>\r\n                        <label>\r\n                            <input className=\"with-gap\" name=\"group1\" type=\"radio\" onChange={handleRadio} id='Active'/>\r\n                            <span>Active</span>\r\n                        </label>\r\n                        <label>\r\n                            <input className=\"with-gap\" name=\"group1\" type=\"radio\" onChange={handleRadio} id='Inactive'/>\r\n                            <span>Inactive</span>\r\n                        </label>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn add lighten-1 depth-0\">Edit Contact</button>\r\n                    </div>\r\n                </form>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n    else \r\n    {\r\n        return (\r\n            <p>Loading Project</p>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    \r\n        const id = ownProps.match.params.id\r\n        const contacts = state.firestore.data.contacts\r\n        const contact = contacts? contacts[id] : null \r\n        return{\r\n            contact:contact,\r\n            auth: state.firebase.auth\r\n\r\n        }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteContact: (id) => dispatch(deleteContact(id)),\r\n        createContact : (contact) => dispatch(createContact(contact))\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([\r\n        { collection : \"contacts\"}\r\n   ])\r\n)(EditContact)\r\n","\r\nimport React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {signIn} from '../Actions/AuthActions'\r\nimport {Redirect} from 'react-router-dom'\r\nclass SignIn extends Component {\r\n    state = {\r\n            email:'',\r\n            password:''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n    }\r\n    render() {\r\n        \r\n        const {authError, auth} = this.props;\r\n        if(auth.uid) return <Redirect to= '/'/>\r\n        return (\r\n            <div className='container'>\r\n                <form onSubmit={this.handleSubmit} className=\"forms\">\r\n                    <h5 className='title'>Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input onChange={this.handleChange} className='white-text' type=\"email\" id='email'/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input onChange={this.handleChange} className='white-text' type=\"Password\" id='password'/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn add  depth-0\">Sign In</button>\r\n                    </div>\r\n                    <div className=\"red-text center\">\r\n                        {authError? <p>{authError}</p> : null }\r\n                    </div>\r\n                </form>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        authError : state.auth.authError,\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n            signIn : (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport {createContact} from '../Actions/ContactActions'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\nclass CreateContact extends Component {\r\n    state = {\r\n            FirstName : '',\r\n            LastName : '',\r\n            Phone : '',\r\n            Email :'',\r\n            Status :''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createContact(this.state)\r\n        this.props.history.push('/')\r\n    }\r\n    handleRadio = (e) => {\r\n            e.preventDefault();\r\n            this.setState({\r\n                Status : e.target.id \r\n            }\r\n            )\r\n    }\r\n    render() {\r\n        const {auth}= this.props\r\n        if(!auth.uid) return <Redirect to= '/signIn'/>\r\n        return (\r\n            <div className='container'>\r\n                <form onSubmit={this.handleSubmit} className='forms'>\r\n                    <h5 className='title'>Add Contact</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"FirstName\">First Name</label>\r\n                        <input onChange={this.handleChange} type=\"text\" id='FirstName' className='white-text'/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"LastName\">Last Name</label>\r\n                        <input onChange={this.handleChange} type=\"text\" id='LastName' className='white-text'/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"Phone\">Phone</label>\r\n                        <input onChange={this.handleChange} type=\"text\" id='Phone' className='white-text'/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input onChange={this.handleChange} type=\"email\" id='Email' className='white-text'/>\r\n                    </div>\r\n                        <label>\r\n                            <input className=\"with-gap\" name=\"group1\" type=\"radio\" onChange={this.handleRadio} id='Active'/>\r\n                            <span>Active</span>\r\n                        </label>\r\n                        <label>\r\n                            <input className=\"with-gap\" name=\"group1\" type=\"radio\" onChange={this.handleRadio} id='Inactive'/>\r\n                            <span>Inactive</span>\r\n                        </label>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn add depth-0\">Add Contact</button>\r\n                    </div>\r\n                </form>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n    return{\r\n        createContact : (contact) => dispatch(createContact(contact))\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateContact)\r\n","import React, {Component} from 'react';\nimport {BrowserRouter, Switch, Route} from'react-router-dom'\nimport Navbar from './Components/NavBar';\nimport MainPage from './Components/MainPage'\nimport EditContact from './Components/EditContact'\nimport SignIn from './Components/SignIn'\nimport CreateContact from './Components/CreateContact'\nclass App extends Component {\n  render(){\n      return (\n        <BrowserRouter>\n        <div className=\"App\">\n          <Navbar/>\n        <Switch>\n          <Route exact path='/' component ={MainPage} />\n          <Route path='/editcontact/:id' component={EditContact} />\n          <Route path='/SignIn' component={SignIn}/>\n          <Route path='/create' component={CreateContact}/>\n        </Switch>\n        </div>\n    </BrowserRouter>\n      )\n}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState= {\r\n    authError:null \r\n}\r\n\r\n\r\nconst AuthReducer = (state= initState,action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR' :\r\n            console.log('Login error');\r\n            return {\r\n                ...state, \r\n                authError : 'LOGIN FAILED'\r\n            }\r\n\r\n        case 'LOGIN_SUCCESS' :\r\n            console.log('LOGIN SUCCESS')\r\n            return {\r\n                ...state,\r\n                authError:null\r\n            }\r\n        \r\n            case 'SIGN_OUT_SUCCESS' :\r\n                console.log('Signed out')\r\n                return state\r\n        default :\r\n        return state \r\n    }\r\n\r\n}\r\n\r\nexport default AuthReducer","const initState= {\r\n    contacts :[\r\n        {id:1, FirstName:'Aftab', LastName:'Mohideen', Phone:'7977676639', Email:'aftabmohideen25@gmail.com', Status:'Active'},\r\n        {id:1, FirstName:'Aysha', LastName:'Mohideen', Phone:'9969896248', Email:'ayshamohideen25@gmail.com', Status:'Active'}\r\n    ]\r\n}\r\n\r\n\r\nconst ContactReducer = (state= initState,action) => {\r\n\r\n    switch(action.type) {\r\n        case 'CREATE_CONTACT': \r\n            console.log('created contact', action.contact)\r\n            return state\r\n        case 'CREATE_CONTACT_ERROR':\r\n            console.log('create contact error', action.error)\r\n\r\n            case 'DELETE_CONTACT':\r\n                console.log('delete contact');\r\n                return state\r\n            case 'DELETE_CONTACT_ERROR':\r\n                console.log('delete contact error', 'state: ', state, 'action: ', action.project);\r\n                return state;\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default ContactReducer","import AuthReducer from './AuthReducer'\r\nimport ContactReducer from './ContactReducer'\r\nimport {combineReducers} from 'redux'\r\nimport {firestoreReducer} from 'redux-firestore'\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\n\r\nconst RootReducer = combineReducers({\r\n    auth:AuthReducer,\r\n    contact:ContactReducer,\r\n    firestore:firestoreReducer,\r\n    firebase:firebaseReducer\r\n    })\r\n\r\nexport default RootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAO2g_NTuGZhkcMh-dStanr54lwuLkaVNM\",\r\n    authDomain: \"contacts-9ae48.firebaseapp.com\",\r\n    databaseURL: \"https://contacts-9ae48.firebaseio.com\",\r\n    projectId: \"contacts-9ae48\",\r\n    storageBucket: \"contacts-9ae48.appspot.com\",\r\n    messagingSenderId: \"60457352213\",\r\n    appId: \"1:60457352213:web:f6b8e427dc713a9eaea21c\",\r\n    measurementId: \"G-EFBB5QTJCB\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  \r\n\r\nfirebase.firestore().settings({timestampsInSnapshots:true})\r\n\r\nexport default firebase","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport  RootReducer from './Reducers/RootReducer';\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {useSelector} from 'react-redux'\nimport {isLoaded} from 'react-redux-firebase'\nimport {\n  reduxFirestore,\n  getFirestore,\n  createFirestoreInstance\n} from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport firebaseConfig from \"./config/firebaseConfig\";\nimport firebase from \"firebase/app\";\n\n\nconst store = createStore(\n  RootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(firebaseConfig)\n  )\n);\n\nconst profileSpecificProps = {\n  userProfile:'users',\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false\n  }\nconst rrfProps = {\n  firebase,\n  config: firebaseConfig,\n  dispatch: store.dispatch,\n  confgi : profileSpecificProps,\n  createFirestoreInstance\n};\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <div className=\"center\"></div>;\n   return children\n}\n\nReactDOM.render(\n  <Provider store={store}>\n  <ReactReduxFirebaseProvider {...rrfProps}>\n    <AuthIsLoaded>\n        <App />\n    </AuthIsLoaded>\n  </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n  );\n  serviceWorker.unregister();"],"sourceRoot":""}